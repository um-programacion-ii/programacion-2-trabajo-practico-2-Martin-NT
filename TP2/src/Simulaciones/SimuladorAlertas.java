package Simulaciones;

import Gestores.Gestores;
import Prestamos.Prestamo;
import Interfaces.RecursoDigital;
import Usuarios.Usuario;
import Gestores.GestorPrestamos;
import Excepciones.UsuarioNoEncontradoException;
import Excepciones.RecursoNoDisponibleException;
import Alertas.AlertaVencimiento;
import java.time.LocalDate;

public class SimuladorAlertas {
    // Hacer gestores est√°tico para que pueda ser utilizado en un contexto est√°tico
    private static final Gestores gestores = new Gestores();  // Inicializa la clase Gestores

    // Metodo para generar el pr√©stamo que vence ma√±ana
    public static void generarPrestamoPorVencer(GestorPrestamos gestorPrestamos) {
        System.out.println("\n===== üìä INICIO DE GENERAR PRESTAMO POR VENCER DE PRUEBA =====");

        // Declaraci√≥n de las variables
        Usuario usuario = null;
        RecursoDigital recurso = null;

        try {
            usuario = gestores.getGestorUsuarios().obtenerUsuarioPorId("U001");
            recurso = gestores.getGestorRecursos().obtenerRecursoPorId("L001");

            if (usuario != null && recurso != null) {
                // Crear el pr√©stamo con fecha de devoluci√≥n para ma√±ana
                Prestamo prestamo = new Prestamo(usuario, recurso, LocalDate.now().minusDays(14), LocalDate.now().plusDays(1), true);
                gestorPrestamos.getPrestamos().add(prestamo); // A√±adir el pr√©stamo al gestor

                // A√±adir la reserva
                gestores.getGestorReservas().agregarReserva(usuario, recurso, 1);

                // Realizar el pr√©stamo (cambiar el estado del recurso y dem√°s)
                gestorPrestamos.realizarPrestamo(usuario, recurso);

                // Imprimir mensaje de √©xito
                System.out.println("üîî Se ha generado un pr√©stamo que vence ma√±ana para pruebas de alertas.");
            } else {
                System.out.println("‚ö†Ô∏è No se pudo crear pr√©stamo de prueba: Usuario o Recurso no encontrados.");
            }
        } catch (UsuarioNoEncontradoException e) {
            System.out.println("‚ö†Ô∏è No se encontr√≥ el usuario: " + e.getMessage());
        } catch (RecursoNoDisponibleException e) {
            System.out.println("‚ö†Ô∏è El recurso no est√° disponible: " + e.getMessage());
        } catch (Exception e) {
            System.out.println("‚ö†Ô∏è Ocurri√≥ un error inesperado: " + e.getMessage());
        }
    }

    // Metodo para verificar las alertas
    public static void verificarAlertas(GestorPrestamos gestorPrestamos) {
        System.out.println("\n===== üìä INICIO DE VERIFICAR ALERTAS VENCIMIENTO DE PRUEBA =====");

        // Creamos el objeto de la clase AlertaVencimiento
        AlertaVencimiento alertaVencimiento = new AlertaVencimiento(gestorPrestamos);

        // Llamamos al metodo para verificar las alertas de vencimiento
        alertaVencimiento.monitorearVencimientos();
    }
}
